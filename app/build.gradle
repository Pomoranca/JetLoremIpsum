plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "com.google.protobuf" version "0.8.12"
}

apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    kotlinOptions.useIR = true


    defaultConfig {
        applicationId "com.app.orderfoodapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.3.0-rc01'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.activity:activity-compose:1.3.0-alpha07"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation "dev.chrisbanes.accompanist:accompanist-coil:$accompanist_version"
    implementation "dev.chrisbanes.accompanist:accompanist-insets:$accompanist_version"
    implementation "androidx.navigation:navigation-compose:1.0.0-alpha10"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.datastore:datastore-preferences-core:1.0.0-beta01'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha05"

    //lifeCycle
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'

    //hilt
    kapt 'androidx.hilt:hilt-compiler:1.0.0-beta01'
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0-beta01'
    implementation 'androidx.hilt:hilt-work:1.0.0-beta01'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0-alpha01'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha04'

    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    //paging
    def paging_version = "3.0.0-rc01"

    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha08"

    //lottie
    def lottie_version = '3.7.0'
    implementation "com.airbnb.android:lottie:$lottie_version"

    //lottie for compose
    implementation 'com.airbnb.android:lottie-compose:1.0.0-beta03-1'

    //datastore
    implementation "androidx.datastore:datastore:1.0.0-beta01"

    implementation  "androidx.datastore:datastore-core:1.0.0-beta01"
    implementation  "com.google.protobuf:protobuf-javalite:3.10.0"

}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}
